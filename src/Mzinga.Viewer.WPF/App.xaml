<Application StartupUri="MainWindow.xaml"
             x:Class="Mzinga.Viewer.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:shared="clr-namespace:Mzinga.SharedUX"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Application.Resources>
        <BitmapImage x:Key="MzingaIcon">pack://application:,,,/Resources/mzinga.ico</BitmapImage>
        <BitmapImage x:Key="ErrorIcon32">pack://application:,,,/Resources/error32.png</BitmapImage>
        <BitmapImage x:Key="InformationIcon32">pack://application:,,,/Resources/information32.png</BitmapImage>
        <shared:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <shared:EnumMatchToBooleanConverter x:Key="EnumMatchToBooleanConverter" />
        <shared:IdleBoolToWaitCursorConverter x:Key="IdleBoolToWaitCursorConverter" />
        <!-- Adapted from http://www.infosysblogs.com/microsoft/2010/07/wpf_-_disabled_look_for_button.html -->
        <Style BasedOn="{x:Null}"
               TargetType="{x:Type Button}"
               x:Key="CleanButton">
            <Setter Property="FocusVisualStyle"
                    Value="{DynamicResource SimpleButtonFocusVisual}" />
            <Setter Property="Background"
                    Value="{DynamicResource NormalBrush}" />
            <Setter Property="BorderBrush"
                    Value="{DynamicResource NormalBorderBrush}" />
            <Setter Property="FontWeight"
                    Value="Bold" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <!-- We use Grid as a root because it is easy to add more elements to customize the button -->
                        <Grid x:Name="Grid">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Padding="{TemplateBinding Padding}"
                                    x:Name="Border" />
                            <!-- Content Presenter is where the text content etc is placed by the control -->
                            <!-- The bindings are useful so that the control can be parameterized without editing the template -->
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="5"
                                              RecognizesAccessKey="True"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Grid>
                        <!--Each state sets a brush on the Border in the template -->
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsKeyboardFocused"
                                     Value="true">
                                <Setter Property="BorderBrush"
                                        TargetName="Border"
                                        Value="{DynamicResource DefaultedBorderBrush}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver"
                                     Value="true">
                                <Setter Property="Background"
                                        TargetName="Border"
                                        Value="{DynamicResource MouseOverBrush}" />
                            </Trigger>
                            <Trigger Property="IsPressed"
                                     Value="true">
                                <Setter Property="Background"
                                        TargetName="Border"
                                        Value="{DynamicResource PressedBrush}" />
                                <Setter Property="BorderBrush"
                                        TargetName="Border"
                                        Value="{DynamicResource PressedBorderBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled"
                                     Value="true" />
                            <Trigger Property="IsEnabled"
                                     Value="false">
                                <Setter Property="Background"
                                        TargetName="Border"
                                        Value="{DynamicResource DisabledBackgroundBrush}" />
                                <Setter Property="BorderBrush"
                                        TargetName="Border"
                                        Value="{DynamicResource DisabledBorderBrush}" />
                                <Setter Property="Foreground"
                                        Value="{DynamicResource DisabledForegroundBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style BasedOn="{StaticResource {x:Static ToolBar.ComboBoxStyleKey}}"
               TargetType="{x:Type ComboBox}"
               x:Key="CleanComboBox">
            <Setter Property="Background"
                    Value="{DynamicResource NormalBrush}" />
            <Setter Property="Padding"
                    Value="2" />
            <Setter Property="HorizontalAlignment"
                    Value="Stretch" />
            <Setter Property="VerticalAlignment"
                    Value="Stretch" />
        </Style>
        <Style BasedOn="{x:Null}"
               TargetType="{x:Type Menu}"
               x:Key="CleanMenu">
            <Setter Property="Background"
                    Value="{DynamicResource NormalBrush}" />
        </Style>
        <SolidColorBrush Color="White"
                         x:Key="NormalBrush" />
        <SolidColorBrush Color="#BEE6FD"
                         x:Key="MouseOverBrush" />
        <SolidColorBrush Color="White"
                         x:Key="DisabledBackgroundBrush" />
        <SolidColorBrush Color="DarkGray"
                         x:Key="DisabledForegroundBrush" />
        <SolidColorBrush Color="Black"
                         x:Key="NormalBorderBrush" />
        <SolidColorBrush Color="DarkGray"
                         x:Key="DisabledBorderBrush" />
    </Application.Resources>
</Application>
